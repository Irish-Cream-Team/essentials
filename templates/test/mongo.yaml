{{- $replicaset := default false .Values.essentials.mongo.replicaset -}}
{{- if .Values.essentials.mongo.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.essentials.mongo.name | default "mongo" }}
  labels:
    {{- include "master-chart.labels" . | nindent 4 }}
    app: {{ .Values.essentials.mongo.name | default "mongo"}}
  annotations:
    "helm.sh/hook": test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.essentials.mongo.name | default "mongo"}}
  template:
    metadata:
      labels:
        app: {{ .Values.essentials.mongo.name | default "mongo"}}
    spec:
      imagePullSecrets:
      {{- range .Values.essentials.mongo.PullSecrets }}
        - name: {{ . }}
      {{- end }}
      containers:
        - name: {{ .Values.essentials.mongo.name | default "mongo"}}
          {{- if $replicaset }}
          image: "harborreg-2.northeurope.cloudapp.azure.com/library/mongo:replicaSet"
          lifecycle:
            postStart:
              exec:
                command: 
                  - "sh"
                  - "-c"
                  - >
                    while [ "$(grep -v "rem_address" /proc/net/tcp | grep 6989)" = "" ];
                    do
                      echo "wating for monog to listen on port 27017"
                    done;
                    mongo --eval 'rs.initiate({_id: "rs0", members: [{_id: 0, host: "localhost:27017"}]})';
          {{- else }}
          image: {{ .Values.essentials.mongo.image | default "mongo"}}
          {{- end }}
          ports:
            - containerPort: {{ .Values.essentials.mongo.port | default "27017"}}
              name: mongo

{{- end -}}
